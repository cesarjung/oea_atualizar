name: OEA - Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10,12,15,18 * * *"  # 07:00, 09:00, 12:00, 15:00 America/Sao_Paulo

env:
  TZ: America/Sao_Paulo
  PYTHONUNBUFFERED: "1"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # Decodifica sem imprimir o secret e valida o JSON; mostra o client_email para vocÃª compartilhar as planilhas.
      - name: Decode and validate credentials.json
        env:
          CREDS_B64: ${{ secrets.GOOGLE_CREDENTIALS_B64 }}
        run: |
          python -c "import os,base64,sys; b=os.environ.get('CREDS_B64'); \
            open('credenciais.json','wb').write(base64.b64decode(b)) if b else sys.exit(2)"
          python -c "import json; j=json.load(open('credenciais.json','r',encoding='utf-8')); \
            print('Service Account email:', j['client_email'])"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install google-api-python-client google-auth google-auth-httplib2 gspread gspread-formatting oauth2client pandas numpy
          fi

      - name: Sanity check
        run: |
          [ -f atualizar_oea.py ] || { echo 'missing atualizar_oea.py'; exit 1; }
          mkdir -p logs

      - name: Run pipeline
        run: python -u -X utf8 atualizar_oea.py
